import axios from "axios";
import { GetServerSideProps } from "next";
import Head from "next/head";
import { Consumption, Promotion, User } from "../../src/types/model";
import { authOptions } from "../api/auth/[...nextauth]";
import { unstable_getServerSession } from "next-auth";
import { useRouter } from "next/router";

//COMPONENTS
import PostPointsCard from "../../src/components/UserDetail/PostPointsCard/PostPointsCard";
import MembershipCard from "../../src/components/UserDetail/MembershipCard/MembershipCard";
import AddPromotion from "../../src/components/UserDetail/AddPromotion/AddPromotion";
import Table from "../../src/components/Ranking/Table/Table";

import s from "./UserDetail.module.scss";

type Props = {
  user: User;
  consumptions: {
    drinks: Consumption[];
    games: Consumption[];
  };
  userConsumptions: {
    drinks: Consumption[];
    games: Consumption[];
  };
  promotions: Promotion[];
  userId: string;
};

const trLastConsumptionsTitles = ["consumicion", "cantidad", "fecha"];

export default function Home({
  user,
  consumptions,
  userConsumptions,
  promotions,
  userId,
}: Props) {
  const router = useRouter();

  return (
    <div className={s.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={s.main}>
        <h2>USER DETAIL</h2>

        <section className={`${s.grid} ${s.j_between}`}>
          <PostPointsCard consumptions={consumptions} userId={userId} />
          <AddPromotion
            promotions={user.membership.promotions}
            userId={userId}
            userPoints={user.totalPoints}
          />
          <MembershipCard user={user} />
        </section>

        <section className={s.grid}>
          <article className={s.margin}>
            <h4>Bebidas</h4>
            {userConsumptions.drinks?.map((consumption) => (
              <div key={consumption.id}>
                <p>
                  {consumption.name} x{consumption.users.length}
                </p>
              </div>
            ))}
          </article>

          <article className={s.margin}>
            <h4>Juegos</h4>
            {userConsumptions.games?.map((consumption) => (
              <div key={consumption.id}>
                <p>
                  {consumption.name} {consumption.users.length}
                </p>
              </div>
            ))}
          </article>
        </section>

        <section className={s.margin}>
          <h4>Ultimas consumiciones</h4>
          <Table trTitles={trLastConsumptionsTitles}>
            {user.consumptions.slice(0, 10).map((consumption) => (
              <tr key={consumption.id}>
                <td>{consumption.consumption.name}</td>
                <td>{consumption.quantity}</td>
                <td>
                  {new Date(consumption.createdAt).toLocaleDateString("es-AR", {
                    year: "numeric",
                    day: "numeric",
                    month: "short",
                  })}
                  {" - "}
                  {new Date(consumption.createdAt).toLocaleTimeString("es-AR", {
                    hour: "2-digit",
                    minute: "2-digit",
                  })}
                </td>
              </tr>
            ))}
          </Table>
        </section>

        <div className={s.btn_wrrapper}>
          <button type="button" onClick={() => router.push("/")}>
            LISTO
          </button>
        </div>
      </main>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await unstable_getServerSession(
    context.req,
    context.res,
    authOptions
  );

  if (session?.user.role === "ADMIN" || session?.user.role === "EMPLOYEE") {
    const id = context.query.id as String;

    const userResponse = await axios(`http://localhost:3000/api/user/${id}`);
    const user: User = userResponse.data;

    const consumptionsResponse = await axios(
      "http://localhost:3000/api/consumption"
    );
    const consumptions: Consumption[] = consumptionsResponse.data;

    const userConsumptionsResponse = await axios(
      `http://localhost:3000/api/consumption?userId=${user.id}`
    );
    const userConsumptions: Consumption[] = userConsumptionsResponse.data;

    // const promotionsResponse = await axios(
    //   `http://localhost:3000/api/promotions?membership=${user.membership}`
    // );
    // const promotions = promotionsResponse.data;

    return {
      props: {
        user,
        consumptions,
        userConsumptions,
        userId: id,
        // promotions,
      },
    };
  }

  return {
    redirect: {
      destination: "/",
      permanent: false,
    },
    porps: {},
  };
};
