import axios from "axios";
import { GetServerSideProps } from "next";
import Head from "next/head";
import PostPointsCard from "../../src/components/UserDetail/PostPointsCard/PostPointsCard";
import MembershipCard from "../../src/components/UserDetail/MembershipCard/MembershipCard";
import { Consumption, Promotion, User } from "../../src/types/model";

import s from "./UserDetail.module.scss";
import AddPromotion from "../../src/components/UserDetail/AddPromotion/AddPromotion";

type Props = {
  user: User;
  consumptions: {
    drinks: Consumption[];
    games: Consumption[];
  };
  userConsumptions: {
    drinks: Consumption[];
    games: Consumption[];
  };
  promotions: Promotion[];
  userId: string;
};

export default function Home({
  user,
  consumptions,
  userConsumptions,
  promotions,
  userId,
}: Props) {
  return (
    <div className={s.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={s.main}>
        <h2>USER DETAIL</h2>

        <section className={s.grid}>
          <PostPointsCard consumptions={consumptions} userId={userId} />
          <AddPromotion
            promotions={user.membership.promotions}
            userId={userId}
            userPoints={user.totalPoints}
          />
          <MembershipCard user={user} />
        </section>

        <section>
          <article className={s.last_consumptions}>
            <h4>Ultimas consumciones</h4>
            {user.consumptions.slice(0, 10).map((consumption) => (
              <div key={consumption.id}>
                <p>
                  {consumption.consumption.name} {consumption.quantity}
                </p>
                <p className={s.date}>
                  {new Date(consumption.createdAt).toLocaleDateString("es-AR", {
                    year: "numeric",
                    day: "numeric",
                    month: "short",
                  })}
                </p>
              </div>
            ))}
          </article>

          <article className={s.last_consumptions}>
            <h4>Bebidas</h4>
            {userConsumptions.drinks?.map((consumption) => (
              <div key={consumption.id}>
                <p>
                  {consumption.name} {consumption.users.length}
                </p>
              </div>
            ))}
          </article>

          <article className={s.last_consumptions}>
            <h4>Juegos</h4>
            {userConsumptions.games?.map((consumption) => (
              <div key={consumption.id}>
                <p>
                  {consumption.name} {consumption.users.length}
                </p>
              </div>
            ))}
          </article>
        </section>
      </main>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const id = context.query.id;

  const userResponse = await axios(`http://localhost:3000/api/user/${id}`);
  const user = userResponse.data;

  const consumptionsResponse = await axios(
    "http://localhost:3000/api/consumption"
  );
  const consumptions = consumptionsResponse.data;

  const userConsumptionsResponse = await axios(
    `http://localhost:3000/api/consumption?userId=${user.id}`
  );
  const userConsumptions = userConsumptionsResponse.data;

  // const promotionsResponse = await axios(
  //   `http://localhost:3000/api/promotions?membership=${user.membership}`
  // );
  // const promotions = promotionsResponse.data;

  return {
    props: {
      user,
      consumptions,
      userConsumptions,
      userId: id,
      // promotions,
    },
  };
};
