import axios from "axios";
import { unstable_getServerSession } from "next-auth";
import { GetServerSideProps } from "next";
import { authOptions } from "../api/auth/[...nextauth]";
import Head from "next/head";

import Table from "../../src/components/Ranking/Table/Table";
import CreateMembership from "../../src/components/admin/CreateMembership/CreateMembership";
import CreatePromotion from "../../src/components/admin/CreatePromotion/CreatePromotion";
import CreateConsumption from "../../src/components/admin/CreateConsumption/CreateConsumption";
import ConsumptionRow from "../../src/components/admin/ConsumptionRow/ConsumptionRow";
import PromotionTale from "../../src/components/admin/PromotionTable/PromotionTable";
import MembershipRow from "../../src/components/admin/MembershipRow/MembershipRow";
import Nav from "../../src/components/Nav/Nav";

import { Consumption, Membership, Promotion } from "../../src/types/model";

import s from "./Admin.module.scss";

type Props = {
  consumptions: {
    drinks: Consumption[];
    games: Consumption[];
  };
  memberships: Membership[];
  promotions: Promotion[];
};

const trTitles = ["Nombre", "Puntos"];

export default function Home({ consumptions, memberships, promotions }: Props) {
  return (
    <div className={s.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Nav />

      <main className={s.main}>
        <h2>ADMIN</h2>

        <CreateMembership />

        <section className={s.grid}>
          <CreateConsumption />
        </section>

        <CreatePromotion
          consumptions={consumptions}
          memberships={memberships}
        />

        <section className={s.grid}>
          <div>
            <h4>Bebidas</h4>
            <Table trTitles={trTitles}>
              {consumptions.drinks.map((consumption) => (
                <ConsumptionRow
                  key={consumption.id}
                  consumption={consumption}
                />
              ))}
            </Table>
          </div>

          <div>
            <h4>Juegos</h4>
            <Table trTitles={trTitles}>
              {consumptions.games.map((consumption) => (
                <ConsumptionRow
                  key={consumption.id}
                  consumption={consumption}
                />
              ))}
            </Table>
          </div>

          <div>
            <h4>Membres√≠as</h4>
            <Table trTitles={trTitles}>
              {memberships.map((membership) => (
                <MembershipRow key={membership.id} membership={membership} />
              ))}
            </Table>
          </div>

          <div>
            <h4>Promociones</h4>
            <PromotionTale promotions={promotions} />
          </div>
        </section>
      </main>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await unstable_getServerSession(
    context.req,
    context.res,
    authOptions
  );

  if (session?.user.role === "ADMIN") {
    const membershipsResponse = await axios(
      "http://localhost:3000/api/membership"
    );
    const memberships = membershipsResponse.data;

    const consumptionsResponse = await axios(
      "http://localhost:3000/api/consumption"
    );
    const consumptions = consumptionsResponse.data;

    const promotionsResponse = await axios(
      "http://localhost:3000/api/promotion"
    );
    const promotions = promotionsResponse.data;

    return {
      props: {
        memberships,
        promotions,
        consumptions,
      },
    };
  }

  return {
    redirect: {
      destination: "/",
      permanent: false,
    },
  };
};
